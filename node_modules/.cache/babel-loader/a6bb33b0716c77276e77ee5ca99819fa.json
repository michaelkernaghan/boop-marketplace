{"ast":null,"code":"'use strict';\n\nvar toString = Object.prototype.toString;\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message);\n};\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message);\n};\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message);\n};\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message);\n};\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message);\n};\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message);\n};\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message);\n};\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message);\n};\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message);\n};\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message);\n};","map":null,"metadata":{},"sourceType":"script"}