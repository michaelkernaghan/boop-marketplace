{"version":3,"sources":["logo.png","components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","className","href","target","rel","id","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","scope","products","map","product","fromWei","owner","purchased","onClick","purchaseProduct","App","call","state","productCount","loading","bind","_assertThisInitialized","_componentWillMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loadWeb3","loadBlockchainData","stop","_loadWeb","_callee2","_context2","ethereum","Web3","enable","currentProvider","alert","_loadBlockchainData","_callee3","accounts","networkId","networkData","marketplace","i","_context3","eth","getAccounts","sent","setState","net","getId","Marketplace","networks","Contract","abi","address","methods","concat","_toConsumableArray","_this2","send","from","once","receipt","_this3","role","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d71c4d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06825633.png\";","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://main--boopstokenstatus.netlify.app/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          BOOP BLockchain Marketplace\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div id=\"content\">\n        <h1>Add Product</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.productName.value\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\n          this.props.createProduct(name, price)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productName\"\n              type=\"text\"\n              ref={(input) => { this.productName = input }}\n              className=\"form-control\"\n              placeholder=\"Product Name\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productPrice\"\n              type=\"text\"\n              ref={(input) => { this.productPrice = input }}\n              className=\"form-control\"\n              placeholder=\"Product Price\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n        </form>\n        <p>&nbsp;</p>\n        <h2>Buy Product</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"productList\">\n            { this.props.products.map((product, key) => {\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{product.id.toString()}</th>\n                  <td>{product.name}</td>\n                  <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\n                  <td>{product.owner}</td>\n                  <td>\n                    { !product.purchased\n                      ? <button\n                          name={product.id}\n                          value={product.price}\n                          onClick={(event) => {\n                            this.props.purchaseProduct(event.target.name, event.target.value)\n                          }}\n                        >\n                          Buy\n                        </button>\n                      : null\n                    }\n                    </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkId]\n    if(networkData) {\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({ marketplace })\n      const productCount = await marketplace.methods.productCount().call()\n      this.setState({ productCount })\n      // Load products\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState({\n          products: [...this.state.products, product]\n        })\n      }\n      this.setState({ loading: false})\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    }\n\n    this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n  }\n\n  createProduct(name, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.createProduct(name, price).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  purchaseProduct(id, price) {\n    this.setState({ loading: true })\n    this.state.marketplace.methods.purchaseProduct(id).send({ from: this.state.account, value: price })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main\n                  products={this.state.products}\n                  createProduct={this.createProduct}\n                  purchaseProduct={this.purchaseProduct} />\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}